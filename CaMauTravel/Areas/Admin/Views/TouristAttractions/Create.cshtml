@model Model.EF.TouristAttraction

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section JsFooter{
    <script>
        $('#btnSelectImage').on('click', function (e) {
            e.preventDefault();
            var finder = new CKFinder();
            finder.selectActionFunction = function (url) {
                $('#txtImage').val(url);
            };
            finder.popup();
        })
    </script>
}

<main class="main-content  mt-0">
    <div class="page-header align-items-start min-vh-100" style="background-image: url('https://meta.vn/Data/image/2021/09/30/background-la-gi-anh-background-dep-28.jpg');">
        <span class="mask bg-gradient-dark opacity-6"></span>
        <div class="container my-auto">
            <div class="row">
                <div class="col-lg-12 col-md-12 col-12 mx-auto">
                    <div class="card z-index-0 fadeIn3 fadeInBottom">
                        <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
                            <div class="bg-gradient-primary shadow-primary border-radius-lg py-3 pe-1">
                                <h4 class="text-white font-weight-bolder text-center mt-2 mb-0">New</h4>
                            </div>
                            <div class="card-body">
                                @using (Html.BeginForm(new { @class = "text-start" }))
                                {
                                    @Html.AntiForgeryToken()

                                    <div class="form-horizontal">
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        <div class="input-group input-group-outline my-3">

                                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Name" } })
                                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                                        </div>

                                        <div class="input-group input-group-outline my-3">

                                            @Html.TextBoxFor(model => model.Images, new { htmlAttributes = new { @class = "form-control", placeholder = "Image" }, id = "txtImage" })
                                            <a id="btnSelectImage" href="#"> Choose Images </a>
                                            @Html.ValidationMessageFor(model => model.Images, "", new { @class = "text-danger" })

                                        </div>

                                        <div class="input-group input-group-outline my-3">

                                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", placeholder = "Description" } })
                                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })

                                        </div>

                                        <div class="input-group input-group-outline my-3">
                                            @Html.LabelFor(model => model.PlaceTypeID, "PlaceTypeID", htmlAttributes: new { @class = "control-label col-md-12" })
                                            @Html.DropDownList("PlaceTypeID", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.PlaceTypeID, "", new { @class = "text-danger" })
                                        </div>


                                        <div class="input-group input-group-outline my-3">

                                            @Html.EditorFor(model => model.MetaTitle, new { htmlAttributes = new { @class = "form-control", placeholder = "Metatitle" } })
                                            @Html.ValidationMessageFor(model => model.MetaTitle, "", new { @class = "text-danger" })

                                        </div>

                                        <div class="text-center">
                                            <input type="submit" class="btn bg-gradient-primary w-100 my-4 mb-2" value="Submit" />
                                            <button type="button" class="btn bg-gradient-primary w-100 my-4 mb-2">@Html.ActionLink("Back to List", "Index")</button>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
</main>
<!--   Core JS Files   -->
<script src="~/Assets/Admin/js/core/popper.min.js"></script>
<script src="~/Assets/Admin/js/core/bootstrap.min.js"></script>
<script src="~/Assets/Admin/js/plugins/perfect-scrollbar.min.js"></script>
<script src="~/Assets/Admin/js/plugins/smooth-scrollbar.min.js"></script>
<script>
    var win = navigator.platform.indexOf('Win') > -1;
    if (win && document.querySelector('#sidenav-scrollbar')) {
        var options = {
            damping: '0.5'
        }
        Scrollbar.init(document.querySelector('#sidenav-scrollbar'), options);
    }
</script>
<!-- Github buttons -->
<script async defer src="https://buttons.github.io/buttons.js"></script>
<!-- Control Center for Material Dashboard: parallax effects, scripts for the example pages etc -->
<script src="~/Assets/Admin/js/material-dashboard.min.js?v=3.0.2"></script>
