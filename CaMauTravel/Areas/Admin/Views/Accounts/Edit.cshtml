@model Model.EF.Account

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<main class="main-content  mt-0">
    <div class="page-header align-items-start min-vh-100" style="background-image: url('https://images.unsplash.com/photo-1497294815431-9365093b7331?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1950&q=80');">
        <span class="mask bg-gradient-dark opacity-6"></span>
        <div class="container my-auto">
            <div class="row">
                <div class="col-lg-4 col-md-8 col-12 mx-auto">
                    <div class="card z-index-0 fadeIn3 fadeInBottom">
                        <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
                            <div class="bg-gradient-primary shadow-primary border-radius-lg py-3 pe-1">
                                <h4 class="text-white font-weight-bolder text-center mt-2 mb-0">New</h4>
                            </div>
                            <div class="card-body">
                                @using (Html.BeginForm(new { @class = "text-start" }))
                                {
                                    @Html.AntiForgeryToken()

                                    <div class="form-horizontal">
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        @Html.HiddenFor(model => model.account_id)
                                        <div class="input-group input-group-outline my-3">

                                            @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control", placeholder = "Username" } })
                                            @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })

                                        </div>

                                        <div class="input-group input-group-outline my-3">

                                            @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password" } })
                                            @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })

                                        </div>

                                        @*<div class="input-group input-group-outline my-3">
                                                @Html.LabelFor(model => model.roll, htmlAttributes: new { @class = "form-label" })

                                                    @Html.EditorFor(model => model.roll, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.roll, "", new { @class = "text-danger" })

                                            </div>*@

                                        <div class="input-group input-group-outline my-3">

                                            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", placeholder = "Full Name" } })
                                            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })

                                        </div>

                                        <div class="input-group input-group-outline my-3">
                                            @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "form-label" })

                                            <div class="checkbox">
                                                <div class="checkbox">
                                                    Nam
                                                    @Html.RadioButtonFor(model => model.gender, false)
                                                    Nu
                                                    @Html.RadioButtonFor(model => model.gender, true)
                                                </div>
                                            </div>

                                        </div>

                                        <div class="input-group input-group-outline my-3">

                                            @Html.EditorFor(model => model.birthday, new { htmlAttributes = new { @class = "form-control", placeholder = "Birthday" } })
                                            @Html.ValidationMessageFor(model => model.birthday, "", new { @class = "text-danger" })

                                        </div>

                                        <div class="input-group input-group-outline my-3">
                                            @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "form-label" })

                                            @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control", placeholder = "Username" } })
                                            @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })

                                        </div>

                                        <div class="input-group input-group-outline my-3">

                                            @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control", placeholder = "Phone" } })
                                            @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })

                                        </div>

                                        <div class="input-group input-group-outline my-3">

                                            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", placeholder = "Email" } })
                                            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })

                                        </div>

                                        @*<div class="input-group input-group-outline my-3">
                                                @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "form-label" })

                                                    <div class="checkbox">
                                                        @Html.EditorFor(model => model.status)
                                                        @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>*@

                                        <div class="text-center">
                                            <input type="submit" value="Save" class="btn bg-gradient-primary w-100 my-4 mb-2" />
                                            <button type="button" class="btn bg-gradient-primary w-100 my-4 mb-2">@Html.ActionLink("Back to List", "Index")</button>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
</main>
<!--   Core JS Files   -->
<script src="~/Assets/Admin/js/core/popper.min.js"></script>
<script src="~/Assets/Admin/js/core/bootstrap.min.js"></script>
<script src="~/Assets/Admin/js/plugins/perfect-scrollbar.min.js"></script>
<script src="~/Assets/Admin/js/plugins/smooth-scrollbar.min.js"></script>
<script>
    var win = navigator.platform.indexOf('Win') > -1;
    if (win && document.querySelector('#sidenav-scrollbar')) {
        var options = {
            damping: '0.5'
        }
        Scrollbar.init(document.querySelector('#sidenav-scrollbar'), options);
    }
</script>
<!-- Github buttons -->
<script async defer src="https://buttons.github.io/buttons.js"></script>
<!-- Control Center for Material Dashboard: parallax effects, scripts for the example pages etc -->
<script src="~/Assets/Admin/js/material-dashboard.min.js?v=3.0.2"></script>